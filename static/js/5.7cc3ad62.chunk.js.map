{"version":3,"sources":["API/Movie_API.js"],"names":["__webpack_require__","r","__webpack_exports__","filter","undefined","length","getSpecificQuote","getRandomQuote","updateMovieState","data","num","random","min","max","Math","round","fetch","headers","authorization","then","res","ok","json","Error","status","catch","err","console","log","toLowerCase","trim","split","join","filterLink"],"mappings":"yFAACA,EAAAC,EAAAC,GAAeA,EAAA,iBAACC,GACb,YAAeC,IAAXD,GAA0C,IAAlBA,EAAOE,OAAqBC,EAAiBH,GAClEI,KAIV,IAAMC,EAAmB,SAACC,GACvB,QAAaL,IAATK,GAAsC,IAAhBA,EAAKJ,OAAc,OAAO,EACpD,IAAIK,EAAMD,EAAKJ,OAAS,EAAIM,EAAO,EAAGF,EAAKJ,OAAO,GAAK,EAEvD,MAAO,CACHI,EAAKC,GAAL,QACAD,EAAKC,GAAL,WAA6B,KAAOD,EAAKC,GAAL,YAA6BD,EAAKJ,SAIxEM,EAAS,SAACC,EAAKC,GAAN,OAAcC,KAAKC,MAAMH,EAAME,KAAKH,UAAUE,EAAID,KAG3DL,EAAiB,WACnB,OAAOS,MAAM,+DAAgE,CAC7EC,QAAS,CACLC,cAAiB,0CAEpBC,KAAK,SAAAC,GACF,OAAIA,EAAIC,GAAWD,EAAIE,OACXC,MAAMH,EAAII,UAEzBL,KAAK,SAAAV,GACF,OAAIA,aAAgBc,MAAcd,EAC3BD,EAAiBC,KAE3BgB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,QAASF,MAIjCpB,EAAmB,SAACH,GAEJ,aAAdA,EAAO,GAAmBA,EAAO,GAAK,aACnB,UAAdA,EAAO,GAAgBA,EAAO,GAAK,UACvCA,EAAO,GAAKA,EAAO,GAAG0B,cAG3B1B,EAAOA,EAAOE,OAAO,GAAKF,EAAOA,EAAOE,OAAO,GAAGwB,cAAcC,OAAOC,MAAM,KAAKC,KAAK,KAEvF,IAAIC,EAAa,uDAIjB,OAHkB,IAAlB9B,EAAOE,OAAe4B,GAAc,YAAc9B,EAAO,GACzD8B,GAAc9B,EAAO,GAAK,IAAMA,EAAO,GAEhCa,MAAOiB,EAAY,CAC1BhB,QAAS,CACLC,cAAiB,0CAEpBC,KAAK,SAAAC,GAAG,OAAIA,EAAIE,SAChBH,KAAK,SAAAV,GAAI,OAAID,EAAiBC,KAC9BgB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI","file":"static/js/5.7cc3ad62.chunk.js","sourcesContent":[" export default (filter) => {\r\n    if (filter !== undefined && filter.length !== 0) return getSpecificQuote(filter);\r\n    return getRandomQuote();\r\n }\r\n \r\n // General method for both movie functions\r\n const updateMovieState = (data) => {\r\n    if (data === undefined || data.length === 0) return false;\r\n    let num = data.length > 1 ? random(0, data.length-1) : 0;\r\n    \r\n    return [\r\n        data[num][\"content\"],\r\n        data[num][\"actor\"][\"name\"] + \", \" + data[num][\"movie\"][\"title\"], data.length\r\n    ]\r\n}\r\n\r\nconst random = (min, max) => Math.round(min + Math.random()*(max-min));\r\n\r\n// Will pick a random quote\r\nconst getRandomQuote = () => {\r\n    return fetch('http://movie-quotes-app.herokuapp.com/api/v1/quotes?random=1', {\r\n    headers: {\r\n        \"authorization\": \"Token token=1iVrE8HF2I6SHudxkWKJKQtt\"\r\n    }})\r\n    .then(res => {\r\n        if (res.ok) return res.json();\r\n        else return Error(res.status);\r\n    })\r\n    .then(data => {\r\n        if (data instanceof Error) return data;\r\n        return updateMovieState(data)\r\n    })\r\n    .catch(err => console.log(\"error\", err))\r\n}\r\n\r\n// Will get specific quotes based on the provided filter\r\nconst getSpecificQuote = (filter) => {  \r\n    // Convert typename to valid typename in API call\r\n    if (filter[0] === \"Category\") filter[0] = \"categories\";\r\n    else if (filter[0] === \"Quote\") filter[0] = \"content\";\r\n    else filter[0] = filter[0].toLowerCase();\r\n\r\n    // Always the last in the array that needs to be lowercase with - between words\r\n    filter[filter.length-1] = filter[filter.length-1].toLowerCase().trim().split(' ').join('-');\r\n\r\n    let filterLink = \"http://movie-quotes-app.herokuapp.com/api/v1/quotes?\";\r\n    filter.length === 1 ? filterLink += \"multiple=\" + filter[0] :\r\n    filterLink += filter[0] + \"=\" + filter[1];\r\n\r\n    return fetch (filterLink, {\r\n    headers: {\r\n        \"authorization\": \"Token token=1iVrE8HF2I6SHudxkWKJKQtt\"\r\n    }})\r\n    .then(res => res.json())\r\n    .then(data => updateMovieState(data))\r\n    .catch(err => console.log(\"error\"))\r\n}"],"sourceRoot":""}